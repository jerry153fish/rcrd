apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: remote-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: remote-secrets
  name: remote-secrets
  namespace: remote-secrets
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: remote-secrets
  template:
    metadata:
      labels:
        control-plane: remote-secrets
    spec:
      serviceAccountName: remote-secrets
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: remote-secrets-operator
          image: jerry153fish/remote-secrets:latest
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 50Mi
          envFrom:
            - secretRef:
                name: remote-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-secrets-leader-election-role
  namespace: remote-secrets
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: remote-secrets-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - jerry153fish.com
    resources:
      - rsecrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - jerry153fish.com
    resources:
      - rsecrets/finalizers
    verbs:
      - update
  - apiGroups:
      - jerry153fish.com
    resources:
      - rsecrets/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: remote-secrets-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: remote-secrets-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: remote-secrets
  namespace: remote-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: remote-secrets-leader-election-rolebinding
  namespace: remote-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-secrets-leader-election-role
subjects:
  - kind: ServiceAccount
    name: remote-secrets
    namespace: remote-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: remote-secrets-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: remote-secrets-manager-role
subjects:
  - kind: ServiceAccount
    name: remote-secrets
    namespace: remote-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: remote-secrets-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: remote-secrets-proxy-role
subjects:
  - kind: ServiceAccount
    name: remote-secrets
    namespace: remote-secrets
---
apiVersion: v1
kind: Secret
metadata:
  name: remote-secrets
  namespace: remote-secrets
type: Opaque
stringData:
  APP: "remote-secrets"
#  AWS_ACCESS_KEY_ID: "aaa"
#  AWS_SECRET_ACCESS_KEY: "secret"
#  AWS_REGION: "ap-southeast-2"
#  LOCALSTACK_URL: "http://dockerhost:4566"
#  TEST_ENV: "true"
