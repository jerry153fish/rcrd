name: Main CI
on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
          - 4571:4571

      vault-server:
        image: vault:latest
        ports:
          - "8200:8200"
        env:
          VAULT_ADDR: "http://0.0.0.0:8200"
          VAULT_DEV_ROOT_TOKEN_ID: "vault-plaintext-root-token"

    env:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: foobar
      AWS_SECRET_ACCESS_KEY: foobar
      VAULT_ADDR: http://localhost:8200
      VAULT_TOKEN: vault-plaintext-root-token

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1

      - name: Wait for localstack
        run: |
          ./wait-for.sh http://localhost:4566/health -t 300 -- echo 'localstack up'
          make init-test && sleep 2

      - name: Run unit tests
        run: |
          make test

  docker-check:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Create k8s Kind Cluster
        uses: jerry153fish/kind-action@main
        with:
          cluster_name: local

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: controller

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image
        uses: docker/build-push-action@v2
        id: build
        with:
          context: .
          tags: controller:local
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: false
          load: true

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: load image into kind
        run: |
          docker images
          make kind-image-load
          make install-local
          kubectl wait deployment -n remote-secrets remote-secrets --for condition=Available=True --timeout=30s

  docker-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: ${{ github.event_name != 'pull_request' }}
    environment: main
    needs: [test, docker-check]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: jerry153fish/remote-secrets

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ${{ github.ref != 'refs/heads/main' && steps.meta.outputs.tags || '' }}
            ${{ github.ref == 'refs/heads/main' && 'jerry153fish/remote-secrets:latest' || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
